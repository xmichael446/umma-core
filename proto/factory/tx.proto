syntax = "proto3";
package ummachain.ummacore.factory;

import "factory/denom.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/umma-chain/umma-core/x/factory/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateDenom(MsgCreateDenom) returns (MsgCreateDenomResponse);
  rpc UpdateDenom(MsgUpdateDenom) returns (MsgUpdateDenomResponse);
//  rpc DeleteDenom(MsgDeleteDenom) returns (MsgDeleteDenomResponse);
  rpc MintAndSendTokens(MsgMintAndSendTokens) returns (MsgMintAndSendTokensResponse);
  rpc UpdateOwner(MsgUpdateOwner) returns (MsgUpdateOwnerResponse);
  rpc BurnToken(MsgBurnToken) returns (MsgBurnTokenResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateDenom {
  string owner = 1;
  string denom = 2;
  string description = 3;
  string symbol = 4;
  int32 decimal = 5;
  string url = 6;
  string logoUrl = 7;
  uint64 maxSupply = 8;
  bool canChangeMaxSupply = 9;
}
message MsgCreateDenomResponse {}

message MsgUpdateDenom {
  string owner = 1;
  string denom = 2;
  string description = 3;
  string url = 4;
  string logoUrl = 5;
  uint64 maxSupply = 6;
  bool canChangeMaxSupply = 7;
}
message MsgUpdateDenomResponse {}

//message MsgDeleteDenom {
//  string owner = 1;
//  string denom = 2;
//}

//message MsgDeleteDenomResponse {}

message MsgMintAndSendTokens {
  string owner = 1;
  string denom = 2;
  uint64 amount = 3;
  string recipient = 4;
}

message MsgMintAndSendTokensResponse {
}

message MsgUpdateOwner {
  string owner = 1;
  string denom = 2;
  string newOwner = 3;
}

message MsgUpdateOwnerResponse {
}

message MsgBurnToken {
  string owner = 1;
  string denom = 2;
  uint64 amount = 3;
}

message MsgBurnTokenResponse {
}

// this line is used by starport scaffolding # proto/tx/message
